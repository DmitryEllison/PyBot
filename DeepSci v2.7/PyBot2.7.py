#!/usr/bin/python3.6
# -*- coding: utf-8 -*-

import vk_api
from vk_api.utils import get_random_id
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from Person import Person
from Hangman import Hangman
import requests
import random
import sys
from time import ctime

class vkBot():
    def __init__(self, token):
        self.token = token
        self.Type = {"SET": 0, "UQ": 1}
        self.BAD_WORDS = "BadWords.txt"
        self.LECTURE_ON_PHYSICS = "Physics.txt"
        self.ANSWERS = "Answers.txt"
        self.OLD_MESSAGE = ""
        self.PHYSICS = ["1-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "2-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "3-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ",
                        "4-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "5-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "6-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ",
                        "7-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "8-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "9-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ",
                        "10-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ", "11-—è –ª–µ–∫—Ü–∏—è –ø–æ —Ñ–∏–∑–∏–∫–µ"]
        self.PHYS_NUM = 2
        self.HANGMAN = {}


    def authorization(self):
        '''–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'''
        session = requests.Session()
        vk_session = vk_api.VkApi(token=self.token)
        return vk_session

    def antiMat(self, message):
        '''–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –º–∞—Ç'''
        bad_words = self.parseText(self.BAD_WORDS, "SET")
        for word in bad_words:
            if word.lower() in message.lower():
                return True
        return False

    def cprint(self, text):
        '''–°–µ—Ä–≤–µ—Ä –Ω–µ –≤–æ–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∏—Ä –ø–æ UTF-8, –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ASCII... –ù–µ –±—É–¥—å—Ç–µ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä!'''
        try:
            print(text)
        except SyntaxError:
            print(text.encode('utf-8'))



    def elseMessages(self, message):
        '''–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π'''
        answers = self.parseText(self.ANSWERS, "UQ")

        for dialog in answers:
            if dialog[0] in message.lower():
                return dialog[1]
        else:
            return [message]


    def parseText(self, name, type):
        '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è'''
        r = open(name, "r", encoding="utf-8")
        text = r.read().replace("'", "")
        if self.Type[type] == 0:
            return text.replace(" ", "").split(",")
        elif self.Type[type] == 1:
            dialogs = text.replace("'", "").split(";")
            arr = []
            for i, value in enumerate(dialogs):
                arr.append(value.split(":", 1))
            for i  in arr:
                if len(i) >= 2:
                    i[1] = i[1].split(",")

            return arr


    def sendAnswer(self, vk_session, event, answer):
        '''–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è'''
        vk = vk_session.get_api()
        vk.messages.send(user_id=event.user_id, random_id=get_random_id(), message=answer)

    def commands(self, vk_session, event, PRIVILEGE):
        if PRIVILEGE >= 2:
            # CHAIRMAN or ADMIN
            pass
        if PRIVILEGE == 3:
            # ADMIN
            if event.text == "\exit":
                self.sendAnswer(vk_session, event, answer="DeepSci chat bot stops!")
                sys.exit()

    def createButton(self,message, vk_session, event):
        '''–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –§–ò–ó–ò–ö–ò'''
        # –ü–µ—á–∞–ª—å–Ω–æ, –Ω–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å keybord –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç, —Ç–æ –∫–Ω–æ–ø–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –≤—ã–≤–æ–¥—è—Ç—Å—è

        vk = vk_session.get_api()
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—Ä–∞–π–Ω–∏–µ —Å–ª—É—á–∞–∏ –ª–µ–∫—Ü–∏–π, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ –Ω–µ –≤—ã–ª–µ–∑–∞–ª –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É (–ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞ –∫–ª–∞–≤–µ –ª–µ–∫—Ü–∏–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ -1 0 +1 )
        if int(self.PHYS_NUM) == 1:
            self.PHYS_NUM = 2
        elif int(self.PHYS_NUM) == 11:
            self.PHYS_NUM = 10

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = VkKeyboard(one_time=True)
        # - text –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Å–ª—É–∂–∏—Ç –∫–∞–∫ —á–∞—Å—Ç—å –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤–µ self.PHYSICS
        text = '-—è –ª–µ–∫—Ü–∏—è –ø–æ ' + '—Ñ–∏–∑–∏–∫–µ'
        # num - –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä—É—é –º—ã –≤—ã–≤–æ–¥–∏–º –≤ —Å–ø–∏—Å–∫–µ –≤—ã–±–æ—Ä–∞ –ª–µ–∫—Ü–∏–π
        num = self.PHYS_NUM - 1
        keyboard.add_button(str(num) + text, color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button(str(self.PHYS_NUM) + text, color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        # –î–æ–±–∞–≤–ª—è–µ–º +1 –∫ —Ç–µ–∫—É—â–∏–º –ª–µ–∫—Ü–∏—è–º, –≤–µ–¥—å –ø—Ä–µ–¥—ã–¥—É—â—É—é –æ–Ω –ø–æ–ª—É—á–∏–ª
        num = self.PHYS_NUM+1
        keyboard.add_button(str(num) + text, color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()

        keyboard.add_button('–•–≤–∞—Ç–∏—Ç!', color=VkKeyboardColor.NEGATIVE)
        self.PHYS_NUM += 1
        vk.messages.send(user_id=event.user_id, random_id=get_random_id(), keyboard=keyboard.get_keyboard(), message=message)

    def menu(self, event, vk_session):
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color=VkKeyboardColor.SECONDARY)
        keyboard.add_line()
        keyboard.add_button('–í–ò–°–ï–õ–ò–¶–ê', color=VkKeyboardColor.PRIMARY)
        keyboard.add_button('–§–ò–ó–ò–ö–ê', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–•–≤–∞—Ç–∏—Ç', color=VkKeyboardColor.NEGATIVE)
        vk_session.get_api().messages.send(user_id=event.user_id, random_id=get_random_id(), keyboard=keyboard.get_keyboard(),
                         message="–ú–µ–Ω—é")

    def manageMessage(self, event, vk_session, person):
        self.cprint(person.USER)
        self.cprint("\t" + event.text + " - " + ctime())
        if event.text[0] == '\\':
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.commands(vk_session, event, int(person.PRIVILEGE))

        elif self.antiMat(event.text):
            # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ú–ê–¢—é–∫–∏
            answer = "–î–∞–≤–∞–π—Ç–µ –ø—Ä–∏—Ç–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ —è —ç—Ç–æ–≥–æ –Ω–µ —Å–ª—ã—à–∞–ª–∞!"
            self.sendAnswer(vk_session, event, answer)

        elif "–º–µ–Ω—é" == event.text.lower():
            self.menu(event, vk_session)

        elif person.ACTIVITY["HANGMAN"] == 1 and str(event.user_id) in self.HANGMAN:
            hangman = self.HANGMAN[str(event.user_id)]
            if "—Ö–≤–∞—Ç–∏—Ç" in event.text.lower():
                person.switchActivity("USUAL")
            elif len(event.text) != 1:
                self.sendAnswer(vk_session, event, "–°–µ–π—á–∞—Å —Ç—ã –∏–≥—Ä–∞–µ—à—å –≤ –í–∏—Å–µ–ª–∏—Ü—É! –ß—Ç–æ–±—ã –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É –Ω–∞–∂–º–∏ –Ω–∞ '–•–≤–∞—Ç–∏—Ç'")
            elif hangman.HP == 0:
                self.sendAnswer(vk_session, event, "–£ –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π!\n–ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ –∑–∞–Ω–æ–≤–æ.")
                person.switchActivity("USUAL")
            else:
                if hangman.checkChar(event.text):
                    if hangman.checkWord():
                        self.sendAnswer(vk_session, event, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–ºüéâ!\n–¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü‚ú®!\n–ö–∞–∫ —É–∂–µ –≤—Å–µ–º –ø–æ–Ω—è—Ç–Ω–æ, –∑–∞–¥–∞–Ω–Ω—ã–º —Å–ª–æ–≤–æ–º –±—ã–ª–æ - " + hangman.SHOW + ".")
                        person.switchActivity("USUAL")
                    else:
                        self.sendAnswer(vk_session, event, "–ë—É–∫–≤–∞ " + event.text + " –ø–æ–¥–æ—à–ª–∞!\n–¢–µ–ø–µ—Ä—å —Å–ª–æ–≤–æ –≤—ã–≥–ª—è–¥–∏—Ç:\n" + hangman.SHOW)
                else:
                    hangman.HP -= 1
                    self.sendAnswer(vk_session, event, "–ë—É–∫–≤–∞ –Ω–µ –ø–æ–¥–æ—à–ª–∞!\n–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å " + str(hangman.HP) + "üíô –∂–∏–∑–Ω–µ–π.\n–í–≤–µ–¥–∏ –Ω–æ–≤—É—é –±—É–∫–≤—É.")
            hangman.updateHangman()

        elif "—Ñ–∏–∑–∏–∫–∞" in event.text.lower():
            self.PHYS_NUM = 2
            # –°–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ—è–≤–∏–ª–∏—Å—å –∫–Ω–æ–ø–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.createButton("–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –ï–ì–≠ –ø–æ —Ñ–∏–∑–∏–∫–µ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –ª–µ–∫—Ü–∏—é!", vk_session, event)

        elif "–≤–∏—Å–µ–ª–∏—Ü–∞" in event.text.lower():
            person.switchActivity("HANGMAN")
            hangman = Hangman(str(event.user_id))
            self.HANGMAN[str(event.user_id)] = hangman
            self.sendAnswer(vk_session, event, "–Ø –∑–∞–≥–∞–¥–∞–ª —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ: " + hangman.SHOW + "\n–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≥–∞–¥–∞—Ç—å!"
                            + "\n–£ —Ç–µ–±—è " + str(7) + "üíô –∂–∏–∑–Ω–µ–π!\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–í–∏—Å–µ–ª–∏—Ü–∞', –∞ —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å - '–•–≤–∞—Ç–∏—Ç'")
            self.cprint("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ - " + hangman.WORD)

        elif event.text in self.PHYSICS:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –ª–µ–∫—Ü–∏–∏
            self.PHYS_NUM = self.PHYSICS.index(event.text) + 1
            # –ü–∞—Ä—Å–∏–º —Å–ø–∏—Å–æ–∫ –ª–µ–∫—Ü–∏–π –∏–∑ —Ñ–∞–π–ª–∞ (parseText –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤)
            lectures = self.parseText("Physics.txt", "UQ")
            # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ª–µ–∫—Ü–∏—è–º –∏ –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—É—é –Ω–∞–º –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º self.PHYS_NUM
            for lecture in lectures:
                if lecture[0] == str(self.PHYS_NUM):
                    message = "–õ–µ–∫—Ü–∏—è "+ str(self.PHYS_NUM) + ":\n" + lecture[1][0]
                    self.sendAnswer(vk_session, event, message)
                    # –ù–µ —É –≤—Å–µ—Ö –ª–µ–∫—Ü–∏–π –µ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç—ã, –ø–æ—ç—Ç–æ–º—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Ö –æ—Ç–¥–µ–ª—å–Ω–æ
                    if lecture[1][1]!='None':
                        message = "–°–∫—Ä–∏–ø—Ç –ø–æ –ª–µ–∫—Ü–∏–∏:" + lecture[1][1]
                        self.sendAnswer(vk_session, event, message)
                    message = "–ï—Å–ª–∏ —Ç–µ–±–µ –ª–µ–Ω—å, –ø–æ—Å–º–æ—Ç—Ä–∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ä–æ–ª–∏–∫:" + lecture[1][2]
                    self.sendAnswer(vk_session, event, message)
            # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—Ü–Ω–∫—Ü–∏—é –∑–∞–Ω–æ–≤–æ
            self.createButton("–í—ã–±–∏—Ä–∞–π –µ—â—ë!", vk_session, event)
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            answer = random.choice(self.elseMessages(event.text))
            self.sendAnswer(vk_session, event, answer)


    def runChatBot(self, vk_session):
        '''–ó–∞–ø—É—Å–∫ –ß–∞—Ç –ë–æ—Ç–∞'''
        self.cprint("–ó–∞–ø—É—Å–∫ –ß–∞—Ç –ë–æ—Ç–∞ DeepSci!")

        longpoll = VkLongPoll(vk_session)
        for event in longpoll.listen():
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≤–µ–Ω—Ç–∞ - —Å–æ–æ–±—â–µ–Ω–∏—è
            if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                person = Person(str(event.user_id), vk_session)
                self.OLD_MESSAGE = event.text
                self.manageMessage(event, vk_session, person)
                # –û–±–Ω–æ–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ
                person.updateJson()


# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à—É –º–∞—à–∏–Ω–∫—É
if __name__ == "__main__":
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
    token = "MyToken"
    myVkBot = vkBot(token)  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç - —á–∞—Ç –±–æ—Ç–∞
    vk_session = myVkBot.authorization() # –ü—Ä–æ—Ö–æ–¥–∏–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    myVkBot.runChatBot(vk_session) # –ó–∞–ø—É—Å–∫–∞–µ–º
